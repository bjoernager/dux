/*
	Copyright 2021 Gabriel Jensen

	This file is part of u8c.

	u8c is free software: you can redistribute it and/or modify it under the
	terms of the GNU Affero General Public License as published by the Free
	Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	u8c is distributed in the hope that it will be useful, but WITHOUT ANY
	WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
	License for more details.

	You should have received a copy of the GNU Affero General Public License
	along with u8c. If not, see <https://www.gnu.org/licenses/>.
*/

#if !defined(u8c_key_JD8l4B23bwAqQ2HP)
#define u8c_key_JD8l4B23bwAqQ2HP

#include <type_traits> /* std::is_floating_point_v */

template<u8c::arith T> constexpr auto u8c::pow(T const _base,T const _exp) noexcept -> T {
	//if constexpr (std::is_floating_point_v<T>) {
	//}
	//else {
		if (u8c::abs(_base) <= T{0x1}) [[unlikely]] {
			return _base;
		}
		T res = _base;
		for (T iter = T{0x1};iter < _exp;iter += T{0x1}) {
			res *= _base;
		}
		return res;
	//}
}

#endif
