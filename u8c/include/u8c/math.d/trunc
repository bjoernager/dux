/*
	Copyright 2021 Gabriel Jensen

	This file is part of u8c.

	u8c is free software: you can redistribute it and/or modify it under the
	terms of the GNU Affero General Public License as published by the Free
	Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	u8c is distributed in the hope that it will be useful, but WITHOUT ANY
	WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
	License for more details.

	You should have received a copy of the GNU Affero General Public License
	along with u8c. If not, see <https://www.gnu.org/licenses/>.
*/

#if !defined(u8c_key_cQ6WEZj1q8fhHahe)
#define u8c_key_cQ6WEZj1q8fhHahe

#include <concepts>    /* std::integral */
#include <limits>      /* std::numeric_limits */
#include <type_traits> /* std::make_unsigned_t */

template<std::integral T,std::integral T0> constexpr auto u8c::trunc(T const _val,T0) noexcept -> T0 {
	if constexpr (std::numeric_limits<T0>::is_modulo) {
		return static_cast<T0>(_val);
	}
	else {
		return static_cast<T0>(static_cast<std::make_unsigned_t<T0>>(_val));
	}
}

#endif
