/*
	Copyright 2021 Gabriel Jensen

	This file is part of u8c.

	u8c is free software: you can redistribute it and/or modify it under the
	terms of the GNU Affero General Public License as published by the Free
	Software Foundation, either version 3 of the License, or (at your
	option) any later version.

	u8c is distributed in the hope that it will be useful, but WITHOUT ANY
	WARRANTY; without even the implied warranty of MERCHANTABILITY or
	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
	License for more details.

	You should have received a copy of the GNU Affero General Public License
	along with u8c. If not, see <https://www.gnu.org/licenses/>.
*/

#if !defined(u8c_key_xtmbVPu5vGoJz4tw)
#define u8c_key_xtmbVPu5vGoJz4tw

#include <u8c/arr>

namespace u8c {
	template<u8c::utf T,u8c::utf T0> [[nodiscard]]                constexpr auto cnv(     T0 const * begin,T0 const * end) -> u8c::arr<T>;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isalnum( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isalpha( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto iscntrl( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isdigit( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto islower( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto ispunct( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isspace( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto issurro( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isupper( char32_t   chr)                  -> bool;
	                                 [[nodiscard,u8c_attr_const]] constexpr auto isxdigit(char32_t   chr)                  -> bool;
}

#include <u8c/utf.d/cnv>
#include <u8c/utf.d/isalnum>
#include <u8c/utf.d/isalpha>
#include <u8c/utf.d/iscntrl>
#include <u8c/utf.d/isdigit>
#include <u8c/utf.d/islower>
#include <u8c/utf.d/ispunct>
#include <u8c/utf.d/isspace>
#include <u8c/utf.d/issurro>
#include <u8c/utf.d/isupper>
#include <u8c/utf.d/isxdigit>

#endif
